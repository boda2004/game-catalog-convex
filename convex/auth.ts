import { convexAuth, getAuthUserId } from "@convex-dev/auth/server";
import { Password } from "@convex-dev/auth/providers/Password";
import { Anonymous } from "@convex-dev/auth/providers/Anonymous";
import { query } from "./_generated/server";

export const { auth, signIn, signOut, store, isAuthenticated } = convexAuth({
  providers: [
    Password({
      id: "password",
      // Send password reset codes via email using Resend (Convex-recommended pattern: use a simple HTTP API, no SMTP libs).
      reset: {
        id: "password-reset",
        name: "Password Reset",
        type: "email",
        maxAge: 60 * 30, // 30 minutes
        async sendVerificationRequest({ identifier, token, url, expires }) {
          const apiKey = process.env.RESEND_API_KEY;
          const from = process.env.EMAIL_FROM;
          const subject = process.env.EMAIL_SUBJECT || "Your password reset code";
          const replyTo = process.env.EMAIL_REPLY_TO;

          if (!apiKey || !from) {
            throw new Error(
              "Email provider is not configured. Set RESEND_API_KEY and EMAIL_FROM environment variables."
            );
          }

          const resetCode = token; // One-time code generated by the provider
          const expireStr = new Date(expires).toLocaleString();

          const text = [
            `We received a request to reset the password for ${identifier}.`,
            "",
            resetCode ? `Your reset code is: ${resetCode}` : undefined,
            url ? `Or use this link: ${url}` : undefined,
            "",
            `This code/link will expire at ${expireStr}. If you didn't request this, you can ignore this email.`,
          ]
            .filter(Boolean)
            .join("\n");

          const html = `
            <div style="font-family: -apple-system, Segoe UI, Roboto, Arial, sans-serif; line-height:1.5;">
              <p>We received a request to reset the password for <strong>${identifier}</strong>.</p>
              ${resetCode ? `<p>Your reset code is:<br/><span style="font-size:20px;font-weight:700;letter-spacing:2px">${resetCode}</span></p>` : ""}
              ${url ? `<p>Or click this link to reset your password:<br/><a href="${url}">${url}</a></p>` : ""}
              <p style="color:#555">This code/link will expire at ${expireStr}. If you didn't request this, you can ignore this email.</p>
            </div>
          `;

          const body = {
            from,
            to: identifier,
            subject,
            text,
            html,
            reply_to: replyTo,
          } as Record<string, string>;

          const res = await fetch("https://api.resend.com/emails", {
            method: "POST",
            headers: {
              "Authorization": `Bearer ${apiKey}`,
              "Content-Type": "application/json",
            },
            body: JSON.stringify(body),
          });

          if (!res.ok) {
            const errText = await res.text().catch(() => "");
            throw new Error(`Failed to send reset email (${res.status}): ${errText}`);
          }
        },
      },
    }),
    Anonymous,
  ],
});

export const loggedInUser = query({
  handler: async (ctx) => {
    const userId = await getAuthUserId(ctx);
    if (!userId) {
      return null;
    }
    const user = await ctx.db.get(userId);
    if (!user) {
      return null;
    }
    return user;
  },
});
